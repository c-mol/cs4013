import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Scanner;

public class cli {
		private String usertype;
		private Scanner in;
		private Scanner userfind;
		private employee e;
		static String[] usertypes= {"employee","human resources","admin"};
		static Overwrite o=new Overwrite();
		 public cli()
		   {
		      in = new Scanner(System.in);
		   }
		 public void run()
		         throws IOException
		   {

		      boolean more = true;
		      
		      while (more)
		      {  usertype=null;
		         System.out.println("user name:");
		         String user = in.nextLine();
		         userfind = new Scanner(new File("../group/src/users.csv"));
		     		boolean done=false;
		     		while(userfind.hasNext()&& done!=true) {
		     			String input=userfind.nextLine();
		     			String[] parts=input.split(",");		
		     			if(user.equals(parts[0]))
		     					{ 	usertype=parts[1];
		     						System.out.printf("user:%s\nusertype:%s\n",user,usertype);
		     						done=true;
		     					}
		     				
		     		}
		     		if(this.usertype==null) {
		     			System.out.print("No user detected,add new user?y/n");
		     			String answer = in.nextLine();
		     			if(answer.toUpperCase().equals("Y")) {
		     				System.out.print("user name:");
		     				String un = in.nextLine();
		     				System.out.println("user type 1)employee 2)human resources 3)admin");
		     				int ut = Integer.parseInt(in.nextLine());
		     				usertype=usertypes[ut-1];
		     				user u=new user(un,usertype);
		     				
		     			}
		     			else if(answer.toUpperCase().equals("N")) {
		     			System.out.print("exiting");
		     			more=false;
		     			
		     			}
		     		}
		     		  //usertypes= ["employee","human resources","admin"];
		     		if (usertype==null) {
		     		
		     		}
		     		else if(usertype.equals("employee")) {
		     			//employeecli
		     			System.out.println("e");
		     			//see details
		     			//see pay slips
		     			//confirm changes
		     			more=false;
		     			
		     		}
		     		//hr
		     		else if(usertype.equals("human resources")){
		     			//hr cli
		     			boolean hrworking=true;
		     			while(hrworking==true&&more==true) {
		     			System.out.println("p)romote,q)uit");
		     			String answer = in.nextLine();
		     			if(answer.toUpperCase().equals("P")) {
		     				System.out.println("type the name of the person to promote.");
			     			String who = in.nextLine();
			     			Scanner line = new Scanner(new File("../group/src/employees.csv"));
			     			String header=line.nextLine();
			     			boolean foundperson=false;
			     			while(line.hasNext()) {
			     						//finds salary
			     						String input=line.nextLine();
			     						String[] parts=input.split(",");
			     						
			     						if(who.toLowerCase().equals(parts[0].toLowerCase()))
			     						{System.out.println(parts[0]+",is a "+parts[2]+" at scale point "+parts[3]);
			     						foundperson=true;
			     						e=new employee(parts[0],parts[1],parts[2],Integer.parseInt(parts[3]));
			     						}
			     						}
			     			
			     			if (foundperson) {
			     				System.out.println("a) move up pay scale\nb) move up jobtitle\nq) quit");
			     				String abq=in.nextLine();
			     				
			     				
			     				if(abq.toUpperCase().equals("A")) {
			     					//name,jobcatagory,jobtitle,scalepoint
			     					e.moveupsalarypoint();
			     					String[] format=e.toString().split(",");
			     					System.out.println(format[0]+" is a "+format[2]+" at scale point "+format[3]+"");
			     					
			     					o.overwrite_employee(e);
					     			}
			     				
					     			
			     				
			     					
			     			else if(abq.toUpperCase().equals("B")) {
		     					//name,jobcatagory,jobtitle,scalepoint
		     					e.moveupincatagory();
		     					String[] format=e.toString().split(",");
		     					System.out.println(format[0]+" is a "+format[2]+" at scale point "+format[3]+"");
		     					
		     					o.overwrite_employee(e);
			     			}
			     			else if(abq.toUpperCase().equals("Q")) {
			     				System.out.println("exited the program");
			     				more=false;
			     				hrworking=false;
			     				}}}
		     			else if(answer.toUpperCase().equals("Q")) {
		     				System.out.println("exited the program");
		     				more=false;
		     				hrworking=false;
		     				}
		     			
		     			}
		     			
		     		}
		     else if(usertype.equals("admin")){
		     			//admin cli
		     			
		     			//add employee
		    	 boolean admin_working=true;
		    	 
		    	 while(admin_working) {
		    		 	System.out.println("Add employee?(y/n)");
		     			String answer = in.nextLine();
		     			if(answer.toUpperCase().equals("Y")){
		     				//yes
		     				System.out.println("f)ulltime P)arttime Q)uit");
		     				answer = in.nextLine();
		     				if(answer.toUpperCase().equals("F")) {
		     					//(String name,String jobCategory, String jobTitle, int scalePoint)
		     					System.out.println("Name:");
			     				String Name = in.nextLine().toUpperCase();
			     				//pick the job catagory
			     				System.out.println("select job category:");
			     				String jobCategory;
			     				ArrayList <String> choices=o.getchoicesinjc();
			     				 char c = 'A';
			     		         for (String choice : choices)
			     		         {
			     		            System.out.println(c + ") " + choice); 
			     		            c++;
			     		         }
			     		         String input = in.nextLine();
			     		         int n = input.toUpperCase().charAt(0) - 'A';
			     		         if (0 <= n && n < choices.size()) {
			     		        	jobCategory= choices.get(n);
			     		        	System.out.println(jobCategory);
			     		         
			     		       
			     		        System.out.println("select job title: ");
			     				String jobTitle;
			     				ArrayList <String> choicesofjt=o.getchoicesinjtwithjc(jobCategory);
			     				 c = 'A';
			     		         for (String choice : choicesofjt)
			     		         {
			     		            System.out.println(c + ") " + choice); 
			     		            c++;
			     		         }
			     		         String input2 = in.nextLine();
			     		         int n2 = input2.toUpperCase().charAt(0) - 'A';
			     		         if (0 <= n2 && n2 < choicesofjt.size()) {
			     		        	jobTitle= choicesofjt.get(n2);
			     		        	System.out.println(jobTitle);
			     		        	
			     		        	//payscale
			     		        	int payscalepoint=-1;
			     		        	//employee e =new employee();
			     		        	while(payscalepoint<0 || payscalepoint>o.getTopPayscale(jobCategory, jobTitle)) {
			     		        	 System.out.printf("Select point on payscale equal to or below %d: \n",o.getTopPayscale(jobCategory, jobTitle));
			     		        	 payscalepoint = in.nextInt();}
			     		        	//info gathered
			     		        	System.out.printf("jc %s jt %s psp %d\n",jobCategory,jobTitle,payscalepoint);
			     		        	FullTimeEmployee f=new FullTimeEmployee(Name,jobCategory,jobTitle,payscalepoint);
			     		        	o.writetolistofusers(f.toString(),"employees");
			     		         }else {System.out.println("sorry something went wrong try again");}//added both jc and jt
			     		         
			     		         }else {System.out.println("sorry something went wrong try again");}
			     		         
			     		           
			     			//end of F	
		     				}
		     				if(answer.toUpperCase().equals("P")) {
		     					System.out.println("Name:");
			     				String Name = in.nextLine().toUpperCase();
			     				
		     				//end of p
			     				}
		     				else if(answer.toUpperCase().equals("Q")) {
		     				more=false;
		     				admin_working=false;
		     				}
		     				
		     			//end of yes	
		     			}
		     			//no
		     			else if (answer.toUpperCase().equals("N")){
		     			more=false;
		     			admin_working=false;
		     			}
		     		}
		    	 }
		     			
		      else {System.out.print("failed");
		      
		     	}
		      
		      }}

public static void main(String []args) throws IOException {
/*The application has three user types.
 *  An employee can log in to the system, see their details, and view their most recent or historical payslips.
 *  An admin user can log in and can add a new employee to the system. 
 *  A human resources user can log in to implement the promotion functionality for full-time staff. 
 *  In such cases the staff member should be asked to confirm the promotional changes being applied. 
 *  A command line interface (CLI) should be included to facilitate this interaction between users and the application. 
 *  The CLI should be included with the expectation that a Graphical User Interface (GUI) may be required in the future. 
 *  In other words the separation between the text-based user interface should be well-defined to allow a graphical user interface to be substituted easily. 
*/
	//check user type
	cli login = new cli();
    login.run();
	}
}

